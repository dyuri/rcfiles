function precmd {

  local TERMWIDTH
  (( TERMWIDTH = ${COLUMNS} - 1 ))

  ###
  # Truncate the path if it's too long.
  
  PR_HG_PROMPT=`hg prompt "{ on {branch}}{ at {bookmark}}{status}" 2> /dev/null`

  PR_FILLBAR=""
  PR_PWDLEN=""
    
  local promptsize=${#${(%):---(%n@%m:%l)---()------[]-}}
  local pwdsize=${#${(%):-%~}}
  local mailsize=${#${PR_HG_PROMPT}}

  if [[ "$mailsize + $promptsize + $pwdsize" -gt $TERMWIDTH ]]; then
    ((PR_PWDLEN=$TERMWIDTH - ($mailsize + $promptsize)))
  else
    PR_FILLBAR="\${(l.(($TERMWIDTH - ($mailsize + $promptsize + $pwdsize))).. .)}"
  fi
}

setopt extended_glob

preexec () {
  if [[ "$TERM" == "screen" ]]; then
    local CMD=${1[(wr)^(*=*|sudo|-*)]}
    echo -n "\ek$CMD\e\\"
  fi
}

setprompt () {
  ###
  # Need this so the prompt will work.

  setopt prompt_subst

  ###
  # See if we can use colors.

  autoload colors zsh/terminfo
  if [[ "$terminfo[colors]" -ge 8 ]]; then
    colors
  fi
  eval PR_BOLD="%{$terminfo[bold]%}"
  for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
    eval PR_$color='%{$fg[${(L)color}]%}'
    (( count = $count + 1 ))
  done
  PR_NO_COLOUR="%{$terminfo[sgr0]%}"

  ###
  # See if we can use extended characters to look nicer.
    
  typeset -A altchar
  set -A altchar ${(s..)terminfo[acsc]}
  PR_SET_CHARSET="%{$terminfo[enacs]%}"
  PR_SHIFT_IN="%{$terminfo[smacs]%}"
  PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
  PR_HBAR=${altchar[q]:--}
  PR_ULCORNER=${altchar[l]:--}
  PR_LLCORNER=${altchar[m]:--}
  PR_LRCORNER=${altchar[j]:--}
  PR_URCORNER=${altchar[k]:--}

  ###
  # Decide if we need to set titlebar text.
    
  case $TERM in
    xterm*|Eterm|rxvt*)
      PR_TITLEBAR=$'%{\e]0;%(!.-=*[ROOT]*=- | .)%n@%M:%~ | ${COLUMNS}x${LINES} | %y\a%}'
      ;;
    screen)
      if [[ "x$REPA_TITLE" == "x" ]]; then
        PR_TITLEBAR=$'%{\e_screen \005 (\005t) | %(!.-=[ROOT]=- | .)%n@%M:%~ | ${COLUMNS}x${LINES} | %y\e\\%}'
      else
        PR_TITLEBAR=$'%{\e_${REPA_TITLE}\e\\%}'
      fi
      ;;
    *)
      PR_TITLEBAR=''
      ;;
  esac
    
  ###
  # Decide whether to set a screen title
  if [[ "$TERM" == "screen" ]]; then
    PR_STITLE=$'%{\ekzsh\e\\%}'
  else
    PR_STITLE=''
  fi
    
  ###
  # Finally, the prompt.

  PROMPT='$PR_SET_CHARSET$PR_STITLE${(e)PR_TITLEBAR}\
$PR_BLUE$PR_SHIFT_IN$PR_ULCORNER$PR_SHIFT_OUT( \
$PR_BOLD$PR_YELLOW%(!.%SROOT%s.%n)$PR_NO_COLOUR$PR_BLUE@$PR_BOLD$PR_GREEN%m \
$PR_NO_COLOUR$PR_MAGENTA%l \
$PR_BOLD$PR_CYAN%$PR_PWDLEN<...<%~%<< \
$PR_NO_COLOUR$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_BOLD$PR_HBAR\
$PR_NO_COLOUR$PR_SHIFT_IN$PR_CYAN$PR_HBAR$PR_BOLD$PR_HBAR$PR_WHITE$PR_HBAR\
${(e)PR_FILLBAR}$PR_BOLD$PR_WHITE$PR_HBAR$PR_CYAN$PR_HBAR\
$PR_NO_COLOUR$PR_SHIFT_IN$PR_CYAN$PR_HBAR$PR_BOLD$PR_BLUE$PR_HBAR$PR_NO_COLOUR\
$PR_SHIFT_IN$PR_BLUE${(e)PR_HBAR}[$PR_SHIFT_OUT$PR_CYAN$PR_HG_PROMPT$PR_SHIFT_IN$PR_BLUE]$PR_HBAR\

$PR_NO_COLOUR$PR_SHIFT_IN$PR_BLUE$PR_LLCORNER$PR_SHIFT_OUT(\
$PR_GREEN%D{%H:%M:%S}\
$PR_BLUE)$PR_BOLD%(!.$PR_RED.$PR_BLUE)%#\
$PR_NO_COLOUR '

  RPROMPT='%(?.. $PR_BLUE<$PR_BOLD$PR_RED%?$PR_NO_COLOUR$PR_BLUE>)$PR_NO_COLOUR'

  PS2='$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT(\
$PR_GREEN$PR_BOLD%_$PR_NO_COLOUR$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN>$PR_NO_COLOUR '

}

setprompt

